import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import interp1d

Hg1_U = [0.0, 0.2, 0.5, 0.7, 0.9, 1.2, 1.5, 1.7, 2.0, 2.2, 2.5, 2.8, 3.0, 3.2, 3.4, 3.7, 3.9, 4.1, 4.4, 4.7, 4.8, 4.9, 5.0, 5.1, 5.2, 5.3, 5.4, 5.6, 5.8, 6.1, 6.3, 6.6, 6.8, 7.0, 7.2, 7.3, 7.4, 7.5, 7.6, 7.9, 8.1, 8.3, 8.5, 8.8, 9.0, 9.3, 9.5, 9.7, 9.8, 9.9, 10.0, 10.1, 10.2, 10.3, 10.6, 10.8, 11.1, 11.2, 11.6, 11.9, 12.0, 12.1, 12.2, 12.3, 12.5, 12.8, 13.0, 13.2, 13.5, 13.7, 14.0, 14.3, 14.4, 14.5, 14.6, 14.7, 14.8, 14.9, 15.0, 15.3, 15.5, 15.8, 16.0, 16.3, 16.4, 16.5, 16.7, 16.8, 16.9, 17.0, 17.3, 17.5, 17.7, 18.0, 18.3, 18.6, 18.8, 19.0, 19.3, 19.5, 19.6, 19.7, 19.8, 19.9, 20.0, 20.3, 20.6, 20.9, 21.1, 21.4, 21.6, 21.7, 21.8, 21.9, 22.0, 22.2, 22.4, 22.6, 22.8, 23.1, 23.3, 23.5, 23.8, 24.1, 24.4, 24.5, 24.6, 24.7, 24.8, 24.9, 25.0, 25.2, 25.5, 25.7, 25.9, 26.1, 26.4, 26.7, 26.8, 26.9, 27.0, 27.1, 27.2, 27.4, 27.6, 27.9, 28.1, 28.4, 28.6, 29.0, 29.4, 29.5, 29.6, 29.7, 29.8, 29.9, 30.1, 30.4, 30.7, 30.9, 31.1, 31.3]

Hg1_Uout = [5.1, 5.3, 5.4, 5.4, 5.5, 5.5, 5.5, 5.7, 5.7, 5.9, 5.9, 6.8, 7.3, 8.2, 9.2, 12.0, 15.3, 18.6, 25.3, 33.3, 38.0, 41.0, 43.7, 45.4, 46.8, 45.4, 42.3, 33.3, 21.9, 14.7, 11.2, 9.8, 9.0, 8.8, 8.5, 8.9, 9.7, 10.3, 11.0, 16.0, 20.0, 26.3, 32.6, 45.5, 53.3, 69.3, 81.6, 93.8, 99.0, 101.0, 99.0, 95.5, 80.8, 75.5, 39.5, 24.9, 15.6, 13.7, 10.4, 10.0, 10.0, 10.8, 11.7, 13.0, 18.0, 23.2, 29.9, 41.2, 58.7, 73.8, 101.8, 117.0, 123.8, 129.0, 136.4, 142.0, 143.8, 135.7, 128.9, 96.4, 64.8, 37.3, 27.3, 17.5, 15.3, 14.3, 13.0, 12.8, 13.5, 14.8, 19.0, 23.5, 31.2, 46.3, 62.9, 91.3, 107.0, 128.0, 156.5, 171.6, 177.1, 178.5, 176.8, 172.0, 154.6, 121.5, 84.0, 51.6, 35.5, 25.2, 22.3, 20.6, 20.0, 21.0, 22.5, 25.2, 31.4, 40.5, 48.6, 61.5, 81.5, 98.5, 122.0, 165.0, 190.0, 195.0, 198.5, 204.0, 202.0, 193.0, 185.6, 169.3, 122.0, 113.0, 93.0, 67.5, 48.7, 40.0, 37.8, 36.5, 36.0, 37.3, 38.8, 41.7, 50.2, 63.0, 79.0, 110.0, 131.5, 183.6, 206.5, 211.2, 213.0, 211.0, 209.4, 206.2, 194.8, 171.2, 139.9, 123.2, 105.1, 86.0]

Hg2_U = [13.2, 13.4, 13.6, 13.9, 14.1, 14.4, 14.5, 14.6, 14.7, 14.8, 14.9, 15.0, 15.1, 15.2, 15.4, 15.6, 15.8, 16.0, 16.3, 16.4, 16.5, 16.6, 16.7, 16.8, 16.9, 17.0, 17.1, 17.3, 17.5, 17.9, 18.2, 18.4, 18.7, 19.0, 19.3, 19.4, 19.5, 19.7, 19.8, 19.9, 20.1, 20.3, 20.5, 20.7, 21.0, 21.3, 21.5, 21.7, 21.9, 22.0, 22.1, 22.2, 22.4, 22.5, 22.6, 22.7, 22.8, 23.0, 23.3, 23.5, 23.7, 24.0, 24.3]

Hg2_Uout = [11.0, 15.0, 17.6, 26.4, 33.3, 50.4, 53.4, 58.2, 60.6, 65.0, 66.0, 65.0, 59.0, 55.7, 44.7, 32.2, 26.8, 19.6, 13.3, 11.8, 10.6, 10.4, 10.0, 9.2, 9.2, 8.5, 8.5, 8.5, 9.0, 11.2, 15.4, 21.4, 32.3, 46.1, 68.6, 72.4, 77.0, 82.0, 83.5, 84.6, 76.0, 67.0, 53.5, 44.6, 28.8, 19.3, 15.0, 13.5, 11.9, 10.8, 10.7, 10.4, 11.0, 11.3, 11.6, 12.3, 13.9, 16.8, 24.4, 32.0, 39.2, 52.0, 71.4]

Ar_U = [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 20.7, 20.9, 21.1, 21.3, 21.5, 21.7, 21.9, 22.1, 22.3, 22.5, 23.0, 23.5, 24.0, 24.5, 25.0, 25.5, 25.7, 25.9, 26.1, 26.3, 26.5, 26.7, 26.9, 27.1, 27.3, 27.5, 27.7, 27.9, 28.1, 28.3, 28.5, 29.0, 29.5, 30.0, 30.5, 31.0, 31.5, 32.0, 32.5, 32.7, 32.9, 33.1, 33.3, 33.5, 33.7, 33.9, 34.1, 34.3, 34.5, 35.0, 35.5, 36.0, 36.5, 37.0, 37.5, 38.0, 38.5, 39.0, 39.2, 39.4, 39.6, 39.8, 40.0, 40.5, 41.0, 41.5, 42.0, 42.5, 43.0, 43.5, 44.0, 44.5, 44.7, 44.9, 45.1, 45.3, 45.5, 46.0, 46.5, 47.0, 47.5, 48.0, 48.5, 49.0, 49.2, 49.4, 49.6, 49.8, 50.0, 50.2, 50.4, 50.6, 50.8, 51.0, 51.2, 51.4, 51.6, 51.8, 52.0, 52.2, 52.4, 52.6, 52.8, 53.0, 53.5, 54.0, 54.5, 55.0, 55.5, 56.0, 56.5, 57.0, 57.2, 57.4, 57.6, 57.8, 58.0, 58.5, 59.0, 59.5, 60.0, 60.5, 61.0, 61.2, 61.4, 61.6, 61.8, 62.0, 62.2, 62.4, 62.6, 62.8, 63.0, 63.2, 63.4, 63.6, 63.8, 64.0, 64.5, 64.7, 64.9, 65.1, 65.3, 65.5, 65.7, 65.9, 66.1, 66.3, 66.5, 67.0, 67.5, 68.0, 68.5, 69.0, 69.5, 70.0, 70.5, 70.7, 70.9, 71.1, 71.3, 71.5, 72.0, 72.5, 73.0, 73.5, 74.0, 74.5, 75.0, 75.5, 76.0, 76.5, 77.0, 77.5, 77.7, 77.9, 78.1, 78.3, 78.5, 78.7, 78.9, 79.1, 79.3, 79.5, 79.7, 79.9, 80.1, 80.3, 80.5, 81.0, 81.5, 82.0, 82.5, 83.0, 83.5, 84.0, 84.5, 85.0, 85.5, 86.0, 86.5, 87.0, 87.5, 88.0, 88.5, 89.0, 89.5, 90.0, 90.5, 91.0, 91.5, 92.0, 92.5, 92.7, 92.9, 93.1, 93.3, 93.5, 93.7, 93.9, 94.1, 94.3, 94.5, 94.7, 94.9, 95.1, 95.3, 95.5, 96.0, 96.5, 97.0, 97.5, 98.0, 98.5, 99.0]

Ar_I = [-0.6, -0.6, -0.6, -0.6, -0.6, -0.6, -0.6, -0.6, -0.6, -0.6, -0.6, -0.6, -0.2, 0.8, 3.1, 7.3, 12.0, 14.2, 16.0, 17.5, 18.3, 19.0, 19.2, 19.7, 20.0, 20.5, 20.4, 20.4, 20.3, 19.7, 18.2, 16.4, 14.2, 11.6, 9.2, 6.3, 4.5, 3.7, 3.2, 2.9, 2.6, 2.5, 2.6, 3.0, 3.5, 4.2, 5.9, 10.3, 14.9, 21.0, 25.1, 29.5, 31.9, 32.2, 33.1, 33.8, 34.4, 34.9, 35.1, 35.5, 35.6, 35.8, 35.9, 35.7, 35.6, 35.4, 35.1, 34.6, 32.7, 29.7, 25.6, 21.2, 15.8, 10.3, 5.4, 2.8, 2.3, 1.9, 1.9, 2.2, 3.3, 5.0, 7.3, 10.8, 13.3, 17.0, 23.8, 29.3, 35.4, 40.0, 43.7, 46.5, 48.6, 50.4, 50.8, 51.0, 51.0, 50.9, 50.8, 50.5, 49.3, 47.1, 43.9, 39.2, 32.8, 27.3, 20.5, 14.5, 10.1, 10.0, 10.0, 11.7, 13.8, 17.1, 22.6, 27.7, 33.6, 38.9, 44.0, 49.0, 52.0, 53.4, 55.1, 56.0, 57.4, 58.3, 59.0, 60.0, 60.9, 61.5, 62.4, 62.8, 63.0, 63.4, 63.6, 63.7, 63.7, 63.6, 63.2, 62.8, 62.1, 60.0, 56.5, 52.0, 47.1, 40.6, 34.7, 29.0, 25.6, 25.4, 25.4, 26.2, 27.2, 28.4, 31.6, 36.5, 41.0, 45.9, 50.8, 55.6, 57.6, 58.8, 60.0, 61.6, 63.5, 64.2, 65.9, 66.9, 68.5, 69.7, 70.3, 71.3, 72.5, 73.4, 74.0, 75.6, 76.1, 76.2, 76.3, 76.3, 76.2, 75.8, 75.5, 74.9, 74.4, 73.5, 70.6, 67.1, 62.6, 58.0, 54.3, 51.2, 49.7, 49.4, 49.8, 50.3, 51.2, 52.0, 53.2, 55.8, 58.8, 62.2, 66.3, 70.4, 74.1, 77.8, 81.5, 84.6, 87.3, 90.2, 92.2, 92.7, 93.3, 93.7, 94.1, 94.3, 94.4, 94.4, 94.3, 94.1, 93.8, 93.4, 93.0, 92.3, 91.5, 90.7, 88.7, 86.4, 84.1, 82.5, 81.3, 80.8, 81.1, 82.0, 83.5, 85.2, 87.6, 90.0, 92.8, 96.2, 99.4, 102.5, 105.5, 109.3, 111.9, 114.9, 117.0, 118.9, 120.4, 121.4, 121.8, 121.9, 122.2, 122.3, 122.4, 122.4, 122.3, 122.1, 122.0, 121.8, 121.5, 121.3, 121.0, 120.9, 120.8, 120.7, 120.5, 120.6, 121.2, 122.2, 123.5, 125.2]


f1 = interp1d(Hg1_U, Hg1_Uout, kind='cubic')
f2 = interp1d(Hg2_U, Hg2_Uout, kind='cubic')
f3 = interp1d(Ar_U, Ar_I, kind='cubic')

x_linspace1 = np.linspace(0, 31.3, num=31300, endpoint=True)
x_linspace2 = np.linspace(13.2, 24.3, num=11100, endpoint=True)
x_linspace3 = np.linspace(0, 99.0, num=99900, endpoint=True)

y1 = list(f1(x_linspace1))
y2 = list(f2(x_linspace2))
y3 = list(f3(x_linspace3))

plt.figure(figsize=(16, 10), dpi=200)
plt.xlim(0, 32)
plt.ylim(0, 220)
my_x_ticks = np.arange(0, 36, 4)
my_y_ticks = np.arange(0, 240, 20)
plt.xticks(my_x_ticks)
plt.yticks(my_y_ticks)
plt.scatter(Hg1_U, Hg1_Uout, marker='+', color='r')
plt.plot(x_linspace1, y1,linestyle='-', color='g')
plt.scatter(Hg2_U, Hg2_Uout, marker='+', color='b')
plt.plot(x_linspace2, y2,linestyle='-', color='c')
plt.show()

plt.figure(figsize=(16, 10), dpi=200)
plt.xlim(0, 100)
plt.ylim(-10, 130)
my_x_ticks = np.arange(0, 110, 10)
my_y_ticks = np.arange(-10, 140, 10)
plt.xticks(my_x_ticks)
plt.yticks(my_y_ticks)
plt.scatter(Ar_U, Ar_I, marker='+', color='r')
plt.plot(x_linspace3, y3,linestyle='-', color='g')
plt.show()

# Hg_1

Hg_max = [y1.index(max(y1[4700:5410])), y1.index(max(y1[9700:10310])), y1.index(max(y1[14600:15010])), y1.index(max(y1[19300:20010])), y1.index(max(y1[24400:25010])), y1.index(max(y1[29000:30010]))]

Hg_max_out = [round(y1[i],3) for i in Hg_max]
print(Hg_max_out)

for i in range(6):
    Hg_max[i] = round((Hg_max[i]+1)/1000, 4)

print('Hg_max =', Hg_max)

Hg_e = 0
for i in range(6):
    Hg_e += (Hg_max[i] - 4.895457143*(i+1) - 0.1777333333)**2
print('sigma^2 =', Hg_e/4)

sigma = 0
for i in [5206, 9890, 14774, 19683, 24729, 29589]:
    a = round(i*0.001, 4)
    print(a, y1[i])
    for j in range(1, 31300):
        if y1[j-1] < y1[i]-5 and y1[i]-5 < y1[j]:
            b = round(j*0.001, 4)
            print(b, y1[j])
        if y1[j-1] > y1[i]-5 and y1[i]-5 > y1[j]:
            c = round(j*0.001, 4)
            print(c, y1[j])
            d = round(c-b, 4)
            print(d, '\n')
            sigma += d
            break
sigma /= 12
print('sigma =', sigma, '\n')

# Hg_2

Hg_max = [y2.index(max(y2[800:2810])), y2.index(max(y2[4800:8800]))]

Hg_max_out = [round(y2[i],3) for i in Hg_max]
print(Hg_max_out)

for i in range(2):
    Hg_max[i] = round((Hg_max[i]+1+13200)/1000, 4)

print('Hg_max =', Hg_max)

# Ar

Ar_max = [y3.index(max(y3[10000:20010])), y3.index(max(y3[25000:28510])), y3.index(max(y3[38000:41510])), y3.index(max(y3[50000:53510])), y3.index(max(y3[63000:67010])), y3.index(max(y3[77000:80510])), y3.index(max(y3[90000:96510]))]

Ar_max_out = [round(y3[i],3) for i in Ar_max]
print(Ar_max_out)

for i in range(7):
    Ar_max[i] = round((Ar_max[i]+1)/1000, 4)

print('Ar_max =', Ar_max)

Ar_e = 0
for i in range(7):
    Ar_e += (Ar_max[i] - 13.11832143*(i+1) - 1.082428571)**2
print('sigma^2 =', Ar_e/5)

sigma = 0
for i in [15751, 27915, 39853, 52760, 65770, 79515, 94442]:
    a = round(i*0.001, 4)
    print(a, y3[i])
    for j in range(1, 99900):
        if y3[j-1] < y3[i]-0.5 and y3[i]-0.5 < y3[j]:
            b = round(j*0.001, 4)
            print(b, y3[j])
        if y3[j-1] > y3[i]-0.5 and y3[i]-0.5 > y3[j]:
            c = round(j*0.001, 4)
            print(c, y3[j])
            d = round(c-b, 4)
            print(d, '\n')
            sigma += d
            break
sigma /= 14
print('sigma =', sigma, '\n')
